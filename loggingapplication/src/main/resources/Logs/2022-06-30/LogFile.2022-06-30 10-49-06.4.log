[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'asyncLoadBalancerInterceptor'
[2022-06-30 10:50:17] - Autowiring by type from bean name 'asyncLoadBalancerInterceptor' via factory method to bean named 'blockingLoadBalancerClient'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'asyncRestTemplateCustomizer'
[2022-06-30 10:50:17] - Autowiring by type from bean name 'asyncRestTemplateCustomizer' via factory method to bean named 'asyncLoadBalancerInterceptor'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration$AsyncRestTemplateCustomizerConfig'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'loadBalancedAsyncRestTemplateInitializer'
[2022-06-30 10:50:17] - Autowiring by type from bean name 'loadBalancedAsyncRestTemplateInitializer' via factory method to bean named 'asyncRestTemplateCustomizer'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'loadBalancerInterceptor'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'loadBalancerRequestFactory'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration'
[2022-06-30 10:50:17] - Autowiring by type from bean name 'loadBalancerRequestFactory' via factory method to bean named 'blockingLoadBalancerClient'
[2022-06-30 10:50:17] - Autowiring by type from bean name 'loadBalancerInterceptor' via factory method to bean named 'blockingLoadBalancerClient'
[2022-06-30 10:50:17] - Autowiring by type from bean name 'loadBalancerInterceptor' via factory method to bean named 'loadBalancerRequestFactory'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'restTemplateCustomizer'
[2022-06-30 10:50:17] - Autowiring by type from bean name 'restTemplateCustomizer' via factory method to bean named 'loadBalancerInterceptor'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'loadBalancedRestTemplateInitializerDeprecated'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'org.springframework.cloud.commons.httpclient.HttpClientConfiguration$ApacheHttpClientConfiguration'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'connManFactory'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'apacheHttpClientBuilder'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'apacheHttpClientFactory'
[2022-06-30 10:50:17] - Autowiring by type from bean name 'apacheHttpClientFactory' via factory method to bean named 'apacheHttpClientBuilder'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'org.springframework.cloud.commons.httpclient.HttpClientConfiguration'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'compositeCompatibilityVerifier'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'springBootVersionVerifier'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'spring.cloud.compatibility-verifier-org.springframework.cloud.configuration.CompatibilityVerifierProperties'
[2022-06-30 10:50:17] - Autowiring by type from bean name 'springBootVersionVerifier' via factory method to bean named 'spring.cloud.compatibility-verifier-org.springframework.cloud.configuration.CompatibilityVerifierProperties'
[2022-06-30 10:50:17] - Autowiring by type from bean name 'compositeCompatibilityVerifier' via factory method to bean named 'springBootVersionVerifier'
[2022-06-30 10:50:17] - Version found in Boot manifest [2.7.1]
[2022-06-30 10:50:17] - Version found in Boot manifest [2.7.1]
[2022-06-30 10:50:17] - All conditions are passing
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$DefaultLoadBalancerCacheManagerConfiguration'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'defaultLoadBalancerCacheManager'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'spring.cloud.loadbalancer.cache-org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties'
[2022-06-30 10:50:17] - Autowiring by type from bean name 'defaultLoadBalancerCacheManager' via factory method to bean named 'spring.cloud.loadbalancer.cache-org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCacheManagerWarnConfiguration'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'caffeineWarnLogger'
[2022-06-30 10:50:17] - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration'
[2022-06-30 10:50:17] - Creating shared instance of singleton bean 'eurekaLoadBalancerProperties'
[2022-06-30 10:50:17] - Starting beans in phase 0
[2022-06-30 10:50:17] - Autowiring by type from bean name 'scopedTarget.eurekaRegistration' via factory method to bean named 'eurekaClient'
[2022-06-30 10:50:17] - Autowiring by type from bean name 'scopedTarget.eurekaRegistration' via factory method to bean named 'eurekaInstanceConfigBean'
[2022-06-30 10:50:17] - Autowiring by type from bean name 'scopedTarget.eurekaRegistration' via factory method to bean named 'eurekaApplicationInfoManager'
[2022-06-30 10:50:17] - Autowiring by type from bean name 'scopedTarget.eurekaApplicationInfoManager' via factory method to bean named 'eurekaInstanceConfigBean'
[2022-06-30 10:50:17] - Setting initial instance status as: STARTING
[2022-06-30 10:50:17] - Autowiring by type from bean name 'scopedTarget.eurekaClient' via factory method to bean named 'eurekaApplicationInfoManager'
[2022-06-30 10:50:17] - Autowiring by type from bean name 'scopedTarget.eurekaClient' via factory method to bean named 'eurekaClientConfigBean'
[2022-06-30 10:50:17] - Autowiring by type from bean name 'scopedTarget.eurekaClient' via factory method to bean named 'eurekaInstanceConfigBean'
[2022-06-30 10:50:17] - Initializing Eureka in region us-east-1
[2022-06-30 10:50:17] - Resolving eureka endpoints via configuration
[2022-06-30 10:50:17] - The availability zone for the given region us-east-1 are [defaultZone]
[2022-06-30 10:50:17] - Config resolved to [AwsEndpoint{ serviceUrl='http://localhost:8761/eureka/', region='us-east-1', zone='defaultZone'}]
[2022-06-30 10:50:17] - Local zone=defaultZone; resolved to: [AwsEndpoint{ serviceUrl='http://localhost:8761/eureka/', region='us-east-1', zone='defaultZone'}]
[2022-06-30 10:50:17] - Disable delta property : false
[2022-06-30 10:50:17] - Single vip registry refresh property : null
[2022-06-30 10:50:17] - Force full registry fetch : false
[2022-06-30 10:50:17] - Application is null : false
[2022-06-30 10:50:17] - Registered Applications size is zero : true
[2022-06-30 10:50:17] - Application version is -1: true
[2022-06-30 10:50:17] - Getting all instance registry info from the eureka server
[2022-06-30 10:50:17] - Ending a session and starting anew
[2022-06-30 10:50:18] - HTTP GET http://localhost:8761/eureka/apps/
[2022-06-30 10:50:18] - Connection manager is shutting down
[2022-06-30 10:50:18] - Connection manager shut down
[2022-06-30 10:50:18] - Accept=[application/json, application/*+json]
[2022-06-30 10:50:18] - CookieSpec selected: default
[2022-06-30 10:50:18] - Auth cache not set in the context
[2022-06-30 10:50:18] - Connection request: [route: {}->http://localhost:8761][total available: 0; route allocated: 0 of 2; total allocated: 0 of 20]
[2022-06-30 10:50:18] - Connection leased: [id: 0][route: {}->http://localhost:8761][total available: 0; route allocated: 1 of 2; total allocated: 1 of 20]
[2022-06-30 10:50:18] - Opening connection {}->http://localhost:8761
[2022-06-30 10:50:18] - Connecting to localhost/127.0.0.1:8761
[2022-06-30 10:50:18] - Connection established 127.0.0.1:64838<->127.0.0.1:8761
[2022-06-30 10:50:18] - Executing request GET /eureka/apps/ HTTP/1.1
[2022-06-30 10:50:18] - Target auth state: UNCHALLENGED
[2022-06-30 10:50:18] - Proxy auth state: UNCHALLENGED
[2022-06-30 10:50:18] - http-outgoing-0 >> GET /eureka/apps/ HTTP/1.1
[2022-06-30 10:50:18] - http-outgoing-0 >> Accept: application/json, application/*+json
[2022-06-30 10:50:18] - http-outgoing-0 >> Host: localhost:8761
[2022-06-30 10:50:18] - http-outgoing-0 >> Connection: Keep-Alive
[2022-06-30 10:50:18] - http-outgoing-0 >> User-Agent: Apache-HttpClient/4.5.13 (Java/18.0.1)
[2022-06-30 10:50:18] - http-outgoing-0 >> Accept-Encoding: gzip,deflate
[2022-06-30 10:50:18] - http-outgoing-0 >> "GET /eureka/apps/ HTTP/1.1[\r][\n]"
[2022-06-30 10:50:18] - http-outgoing-0 >> "Accept: application/json, application/*+json[\r][\n]"
[2022-06-30 10:50:18] - http-outgoing-0 >> "Host: localhost:8761[\r][\n]"
[2022-06-30 10:50:18] - http-outgoing-0 >> "Connection: Keep-Alive[\r][\n]"
[2022-06-30 10:50:18] - http-outgoing-0 >> "User-Agent: Apache-HttpClient/4.5.13 (Java/18.0.1)[\r][\n]"
[2022-06-30 10:50:18] - http-outgoing-0 >> "Accept-Encoding: gzip,deflate[\r][\n]"
[2022-06-30 10:50:18] - http-outgoing-0 >> "[\r][\n]"
[2022-06-30 10:50:18] - http-outgoing-0 << "HTTP/1.1 200 [\r][\n]"
[2022-06-30 10:50:18] - http-outgoing-0 << "Content-Encoding: gzip[\r][\n]"
[2022-06-30 10:50:18] - http-outgoing-0 << "Content-Type: application/json[\r][\n]"
[2022-06-30 10:50:18] - http-outgoing-0 << "Content-Length: 729[\r][\n]"
[2022-06-30 10:50:18] - http-outgoing-0 << "Date: Thu, 30 Jun 2022 09:50:18 GMT[\r][\n]"
[2022-06-30 10:50:18] - http-outgoing-0 << "Keep-Alive: timeout=60[\r][\n]"
[2022-06-30 10:50:18] - http-outgoing-0 << "Connection: keep-alive[\r][\n]"
[2022-06-30 10:50:18] - http-outgoing-0 << "[\r][\n]"
[2022-06-30 10:50:18] - http-outgoing-0 << "[0x1f][0x8b][0x8][0x0][0x0][0x0][0x0][0x0][0x0][0xff][0xed][0x95]]o[0xa2]@[0x14][0x86][0xff][0xcb][0xa4][0x97]V[0x7][0x15][0xfc][0xb8]*[0xab][0xc6][0x90][0xad]h[0xaa]n[0xd3]l[0x1a]3[0x85][0xa3]N[0x16][0x6]2[0x8c]vI[0xe3][0xdf]3[0xb2]Xmi[0xa4][0x8d][0x97][0xbd]B[0xce][0xbc]g[0xce][0xe7][0x83]/[0x84][0xc5]q[0xc0]=[0xa6]x$[0x12][0xd2]}![[0x90][0x89][0xfe][0xbd]X[0xf8][0x10](F[0xba][0xc4] [0x15][0xad]B[0xcb][0x9a]%k/[0xf2][0x1][0x8d][0xf3][0xc9][0xa2][0xb1][0xc8][0xe]rw[0xd2][0xfd][0xfd]B[0x4][0xb][0xf5][0xf1][0x8f][0xc1]ld[0xbb][0xf6]p0[0x1a][0xb8][0xb3][0xe9][0xc3]t6[0x18][0xa1][0x98][0x8b]D1[0xe1][0xc1]^[0x99][0xbf]8[0xbe][0x8e][0xd1][0xa9]W[\r][0xab]][0xa5][0xd5][0x96][0xd9]}[0x2][0x15]2[0xc1]V[0x10][0x82]PI[0x9a]([0x8][0xbb]mJ)[0xde][0xb0][0x8e][0x12][0xe5]f![0x8e]][0xb2]D>[0x8e][0x1b][0xdb][0xbe]/[0xdf][0xfb]`[0x2]j[0x93][0xec][0xab][0xc1][0xb7][0x8]K[0x97][0xdc][0xf7]AL[0xf]v[0xf7][0xa7];[0xbe]w[0xf1]0[0x8e][0xa4][0xd2][0xed][0xb9]"[0xfb]T*[0xe4][0x6][0x4]{[\n]"
[2022-06-30 10:50:18] - http-outgoing-0 << "@'[0xaf][0xe4][0x6][0xc8][0xe][0xaf][0x3]o#a[0xf2][0xaa]l6[0x1b]'[0xc2]%[0xb][0x92][0xbd][0xd2][0x8b]6B[0xc9]T[0x97]nT[0x88][0xcf][0x14][0xeb]a[0xa9] [0x1d][0xb1][0x8c][0xb4][0xef][0x8d][0x17][0xb0]D'[0xe0]EaU[0x80]Z[0x6][0xfc]o[0x15]+[0xe4]x^u[0xf2][0xc6][0xe1][0xcb]U[0x1f][0x96]l[0x13][0xa8][0xfe][0xe9][0x15][0x95]|[0xe][0xa3]t[0xfc],t[0xc4][0x0]X[0x2][0xf9][0xf5][0x12][0x4]<[0xb3][0xc0][0xd1][0xfa][0xad]~N[0xc1][0xc3]h[\r],[0xcb][0xdf][0xc8][0xfd]0s[[0x7]m[0x12]V<Q[0x99]}[0xc6]C[0xc0][0xf0]!6[0xdb][0xb0]L[0xcb]l[0xd7][0x9b][0xed][0xe]ma[0x15][0x98][0xb1][0xba][0xcb].[0xfe]X[0x4][[0xee][0xbd][0xb9][0x86][0xea][0xc6]I[0xb4][0xc3]<.rl[0xe3][0x13][0xb][0x8]A1[0xdd]([0x9d][0xff][0xeb]vT[0xb3][0xb9][0x90][0xfd]z[0xec][0xf4]~[0x84]0[0xc1][0xb3][0xb9][0xc][0xd0][0xba]V*[0xee][0xd6]j'[0xcb][0xa5][0x95][0xb5][0xc3][0xec]Kh[0x99][0xa7]6LE[0xb2][0xc6][0xb3][0xce][0xae][0x81][0x5]j[0xdd][[0x83][0xf7][0xa7][0xac]g[0xe6][0x82][0xbe][0xdb]l[0x13]a?[0xdb][0x82]5'[0xf9][0x12][0xfd]:/[0xe4]I/[0x8a][0xa4][0xcf][0x5][0xce]E[0xac][0xfa]<[0xf1][0xf4][0x2][0xa7]S[0xec]%[0xc8][0xc3][0xb2]es[0x99][0xc7][0xd8]:[0xf0][0x8f][0xda]KN[0x6][0xf3]_[0xd6][0xe7]R[0xa5][0x85][0xa2]v[0x93][0xd6]5d[0xd9][0xf0][0xd2]X[0xef][0x96][0xdd][0xef][0xf][0xfa]d[0xf7][0xb8][0xab][0x1c][0xb0][0xbf][0x1d][0xf][0x87][0x8e];[0xb4]'[0x93][[0xa7]g[0xcf][0x9c][0xb1][[0x9e][0xfa] Z[0xad][0xb0][0x90][0xa3][0xf][0x8a][0xee][0xa2]Q[0x2][0xfa][0xe2][0xa8][0x97]f[0xde][0xf8]f[0xfe]@[0xa5]I[0x1b][0xb4]S?[0xc3]|.[0xfa]4[0xf3]&[0xad][0x9b][0x96]U[0x86]y[0xa3]4[0xf3][0xc6]'[0x98]7[0xbe][0xcc][0xbc]q[0x8e][0xf9][0xf7]K^[0x8c]|[0xa1][0xee]2[0xc4]gc9C<[0x8e][0xa0]I[0xad][0x12][0xc4][0xdb][0x13][0xe7]zh[0xcf][0x6][0xf7][0xf6]Cy[0xd4]Y[0xcc][0xaf]W[0x98][0xde]3K[0xbb][0xed][0x96]e[0x96]`[0xfc]M[0x9c][0xcb][0xc2][0x8d])|[0xc3]}[0x84][0x9f]e[0xb6][0xe8]Y[0xb8]3[0xd1][0x17][0xe0][0xb6]h[0x99]?t[0xbd][0x16][0xe5][0xe0]Fei[0xb8][0xb5][0xf6]kp[0x9f]x[0x16][0xc3]}[0xb4][0xd6][0xc5]T[0x9f][\n]"
[2022-06-30 10:50:18] - http-outgoing-0 << ".[0x85][0xb3][0x1e][0xc4]Y[0x9c]-J[0x9b][0x1f][0xe2][0xfc][0xb8][0xdb][0xfd][0x3][0xa3][0x3]m[0x1c][0x9][0xc][0x0][0x0]"
[2022-06-30 10:50:18] - http-outgoing-0 << HTTP/1.1 200 
[2022-06-30 10:50:18] - http-outgoing-0 << Content-Encoding: gzip
[2022-06-30 10:50:18] - http-outgoing-0 << Content-Type: application/json
[2022-06-30 10:50:18] - http-outgoing-0 << Content-Length: 729
[2022-06-30 10:50:18] - http-outgoing-0 << Date: Thu, 30 Jun 2022 09:50:18 GMT
[2022-06-30 10:50:18] - http-outgoing-0 << Keep-Alive: timeout=60
[2022-06-30 10:50:18] - http-outgoing-0 << Connection: keep-alive
[2022-06-30 10:50:18] - Connection can be kept alive for 60000 MILLISECONDS
[2022-06-30 10:50:18] - Response 200 OK
[2022-06-30 10:50:18] - Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications]
[2022-06-30 10:50:18] - Connection [id: 0][route: {}->http://localhost:8761] can be kept alive for 60.0 seconds
[2022-06-30 10:50:18] - http-outgoing-0: set socket timeout to 0
[2022-06-30 10:50:18] - Connection released: [id: 0][route: {}->http://localhost:8761][total available: 1; route allocated: 1 of 2; total allocated: 1 of 20]
[2022-06-30 10:50:18] - Pinning to endpoint null
[2022-06-30 10:50:18] - The response status is 200
[2022-06-30 10:50:18] - Got full registry with apps hashcode UP_3_
[2022-06-30 10:50:18] - The total number of all instances in the client now is 3
[2022-06-30 10:50:18] - Starting heartbeat executor: renew interval is: 30
[2022-06-30 10:50:18] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2022-06-30 10:50:18] - Discovery Client initialized at timestamp 1656582618360 with initial instances count: 3
[2022-06-30 10:50:18] - Registering application LOGGINGAPPLICATION with eureka with status UP
[2022-06-30 10:50:18] - Saw local status change event StatusChangeEvent [timestamp=1656582618363, current=UP, previous=STARTING]
[2022-06-30 10:50:18] - Executing on-demand update of local InstanceInfo
